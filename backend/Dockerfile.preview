FROM golang:1.22-alpine

WORKDIR /app

# Install required tools and dependencies
RUN apk add --no-cache \
    gcc \
    musl-dev \
    sqlite-dev \
    wget \
    curl

# Copy and download dependencies first (better caching)
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build with debug information
RUN go build -gcflags="all=-N -l" -o main .

# Setup proper permissions for preview environment
RUN mkdir -p /app/data && \
    chmod -R 777 /app/data && \
    chmod +x main

# Health check using wget (more reliable in Alpine)
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8090/health || exit 1

EXPOSE 8090

# Use shell form to ensure proper signal handling
CMD ["sh", "-c", "mkdir -p /app/data && chmod 777 /app/data && ./main"]
